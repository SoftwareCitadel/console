services:
  postgres:
    image: 'postgres:13'
    ports:
      # We use the 5433 port to avoid conflicts with Traefik
      - '5433:5432'
    environment:
      PGPASSWORD: citadel
      POSTGRES_DB: citadel
      POSTGRES_USER: citadel
      POSTGRES_PASSWORD: citadel
    volumes:
      - 'citadel_postgres:/var/lib/postgresql/data'

  reverse-proxy:
    image: traefik:v3.0
    command:
      - '--api.insecure=true'
      - '--providers.docker'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
      - '--entrypoints.websecure.address=:443'
      - '--certificatesresolvers.myresolver.acme.httpchallenge=true'
      - '--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web'
      - '--certificatesresolvers.myresolver.acme.email=contact@softwarecitadel.com'
      - '--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json'
      - '--entrypoints.postgres.address=:5432'
      - '--entrypoints.redis.address=:6379'
      - '--entrypoints.mysql.address=:3306'
    ports:
      - '80:80'
      - '443:443'
      - '8080:8080'
      - '5432:5432'
      - '6379:6379'
      - '3306:3306'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - 'citadel_traefik:/letsencrypt'
    networks:
      - traefik

  whoami:
    image: traefik/whoami
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.whoami.rule=Host(`whoami.softwarecitadel.app`)'
      - 'traefik.http.routers.whoami.entrypoints=websecure'
      - 'traefik.http.routers.whoami.tls.certresolver=myresolver'
    networks:
      - traefik

  minio:
    image: 'minio/minio:latest'
    ports:
      - '${MINIO_PORT:-9000}:9000'
      - '${MINIO_CONSOLE_PORT:-8900}:8900'
    environment:
      MINIO_ROOT_USER: 'console'
      MINIO_ROOT_PASSWORD: 'consoleconsole'
    volumes:
      - 'citadel_minio:/data/minio'
    command: minio server /data/minio --console-address ":8900"

  redis:
    image: redis:6.2
    ports:
      # We use the 6380 port to avoid conflicts with Traefik
      - '6380:6379'

  registry:
    image: registry:2
    ports:
      - '5000:5000'
    volumes:
      - 'citadel_registry:/var/lib/registry'

  mercure:
    # The official Mercure image
    image: dunglas/mercure
    restart: unless-stopped
    environment:
      # Disables Mercure.rocks auto-HTTPS feature, HTTPS must be handled at edge by Traefik or another proxy in front of it
      SERVER_NAME: ':80'
      MERCURE_PUBLISHER_JWT_KEY: 'console'
      MERCURE_SUBSCRIBER_JWT_KEY: 'console'
    # Enables the development mode, comment the following line to run the hub in prod mode
    command: /usr/bin/caddy run --config /etc/caddy/Caddyfile.dev
    volumes:
      - citadel_mercure_data:/data
      - citadel_mercure_config:/config
    labels:
      - 'traefik.http.routers.mercure.rule=Host(`mercure.docker.localhost`)'
    networks:
      - traefik

volumes:
  citadel_postgres:
  citadel_traefik:
  citadel_registry:
  citadel_minio:
  citadel_mercure_data:
  citadel_mercure_config:

networks:
  traefik:
    name: traefik
